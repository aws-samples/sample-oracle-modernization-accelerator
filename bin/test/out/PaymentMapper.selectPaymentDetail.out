================================================================================
PaymentMapper.selectPaymentDetail 차이 분석 보고서
================================================================================
분석 일시: 2025-01-01
SQL ID: PaymentMapper.selectPaymentDetail
결과 동일성: 다름 (same = 'N')

================================================================================
1. 개요
================================================================================
Oracle과 PostgreSQL에서 동일한 1건의 결제 상세 정보를 반환하지만, 
gateway_response 필드에서 CLOB 데이터 처리 방식의 차이가 발생하고 있습니다.

================================================================================
2. 필드별 비교 결과
================================================================================
필드명            | Oracle 값                | PostgreSQL 값                                    | 동일여부
------------------|--------------------------|--------------------------------------------------|----------
amount            | 116.11                   | 116.11                                           | ✓
created_at        | 2024-10-09 05:31:26.0   | 2024-10-09 05:31:26.0                          | ✓
currency          | USD                      | USD                                              | ✓
gateway_response  | oracle.sql.CLOB@78c1a023 | {"status":"success","transaction_id":"TXN-..."}  | ✗
order_id          | 309                      | 309                                              | ✓
payment_id        | 1                        | 1                                                | ✓
payment_method    | CREDIT_CARD              | CREDIT_CARD                                      | ✓
payment_status    | COMPLETED                | COMPLETED                                        | ✓
transaction_id    | TXN-20250822-00000001    | TXN-20250822-00000001                           | ✓
user_email        | user498@example.com      | user498@example.com                             | ✓
user_id           | 498                      | 498                                              | ✓
user_name         | First498 Last498         | First498 Last498                                | ✓

총 12개 필드 중 11개 필드 일치 (91.7% 일치율)

================================================================================
3. 주요 차이점 분석
================================================================================

3.1 gateway_response 필드 차이
┌─────────────────────────────────────────────────────────────────────────────┐
│ Oracle 결과:                                                                │
│ oracle.sql.CLOB@78c1a023                                                    │
│                                                                             │
│ PostgreSQL 결과:                                                            │
│ {"status":"success","transaction_id":"TXN-20250822-00000001",               │
│  "gateway":"PayPal","message":"Payment processed successfully"}             │
└─────────────────────────────────────────────────────────────────────────────┘

3.2 차이 원인 분석
- Oracle: CLOB 데이터가 객체 참조(oracle.sql.CLOB@78c1a023)로 표시됨
- PostgreSQL: JSON/TEXT 데이터가 실제 내용으로 표시됨
- MyBatis에서 CLOB 데이터 처리 방식의 차이

================================================================================
4. 기술적 분석
================================================================================

4.1 CLOB 데이터 처리 차이
- Oracle CLOB: MyBatis가 CLOB 객체 참조를 반환
- PostgreSQL TEXT/JSON: 실제 문자열 내용을 직접 반환
- ResultSet 처리 방식의 근본적 차이

4.2 데이터 타입 매핑
Oracle                    PostgreSQL
------------------------  ------------------------
CLOB                  →   TEXT/JSONB
oracle.sql.CLOB       →   java.lang.String

4.3 MyBatis TypeHandler 이슈
- Oracle용 CLOB TypeHandler와 PostgreSQL용 TEXT TypeHandler 차이
- 자동 변환 로직의 부재

================================================================================
5. 영향도 평가
================================================================================

5.1 비즈니스 영향도: 중간
- 결제 게이트웨이 응답 정보는 중요한 비즈니스 데이터
- 로깅, 디버깅, 고객 지원에 활용되는 정보
- 실제 데이터는 동일하나 표현 방식만 다름

5.2 데이터 정합성: 낮음
- 핵심 결제 정보(금액, 상태, ID 등)는 모두 일치
- gateway_response만 표현 방식이 다름
- 실제 비즈니스 로직에는 영향 없음

5.3 마이그레이션 위험도: 낮음
- CLOB 내용 자체는 동일할 가능성 높음
- 애플리케이션에서 gateway_response 파싱 로직 확인 필요

================================================================================
6. 권장 해결 방안
================================================================================

6.1 즉시 조치 사항
□ MyBatis에서 CLOB 데이터 처리 방식 통일
□ Oracle CLOB 내용과 PostgreSQL TEXT 내용 실제 비교 검증
□ TypeHandler 설정 확인 및 수정

6.2 구체적인 수정 방향
□ Oracle용 CLOB TypeHandler 구현
  - ClobTypeHandler를 사용하여 CLOB → String 변환
  - MyBatis 설정에서 명시적 TypeHandler 지정

□ PostgreSQL 호환성 확보
  - TEXT/JSONB 타입에 대한 일관된 처리
  - 동일한 문자열 결과 보장

6.3 MyBatis 설정 예시
```xml
<resultMap id="paymentDetailResultMap" type="PaymentDetail">
    <result property="gatewayResponse" column="gateway_response" 
            typeHandler="org.apache.ibatis.type.ClobTypeHandler"/>
</resultMap>
```

6.4 검증 방법
□ Oracle에서 CLOB 내용 직접 조회하여 PostgreSQL 결과와 비교
□ 실제 gateway_response 데이터 내용 검증
□ 애플리케이션 레벨에서 파싱 테스트 수행

================================================================================
7. SQL 수정 권장사항
================================================================================

7.1 Oracle 쿼리 수정 (권장)
기존: SELECT gateway_response FROM payments
수정: SELECT TO_CHAR(gateway_response) as gateway_response FROM payments

7.2 MyBatis ResultMap 수정
```xml
<select id="selectPaymentDetail" resultType="PaymentDetail">
    SELECT 
        payment_id,
        amount,
        currency,
        TO_CHAR(gateway_response) as gateway_response,  -- Oracle CLOB 처리
        payment_method,
        payment_status,
        transaction_id,
        order_id,
        user_id,
        user_email,
        user_name,
        created_at
    FROM payments p
    JOIN users u ON p.user_id = u.user_id
    WHERE p.payment_id = #{paymentId}
</select>
```

================================================================================
8. 추가 확인 사항
================================================================================

8.1 실제 CLOB 내용 확인 필요
□ Oracle에서 DBMS_LOB.SUBSTR 함수로 CLOB 내용 확인
□ PostgreSQL 결과와 실제 내용 비교

8.2 애플리케이션 영향 확인
□ gateway_response 필드를 사용하는 코드 검토
□ JSON 파싱 로직이 있는지 확인
□ 로깅/모니터링 시스템 영향 확인

================================================================================
9. 결론
================================================================================
PaymentMapper.selectPaymentDetail은 CLOB 데이터 처리 방식의 차이로 인한 
표현상의 차이만 있으며, 핵심 비즈니스 데이터는 모두 일치합니다.

우선순위: 중간 (Medium Priority)
작업 예상 시간: 0.5-1일
검증 필요 시간: 0.5일

주요 작업:
1. MyBatis CLOB TypeHandler 설정
2. Oracle 쿼리에서 TO_CHAR() 함수 적용
3. 실제 CLOB 내용 검증

이 수정을 통해 Oracle과 PostgreSQL에서 동일한 문자열 결과를 얻을 수 있습니다.

================================================================================
