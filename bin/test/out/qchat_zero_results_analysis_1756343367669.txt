Oracle vs PostgreSQL SQL 테스트에서 양쪽 모두 0건을 반환한 SQL들을 분석하고 검증 방안을 제시해주세요:\n\n## 📁 SQL 매퍼 파일 경로\n- **소스 (Oracle)**: /home/ec2-user/workspace/src-orcl/src/main/resources/sqlmap\n- **타겟 (PostgreSQL)**: /home/ec2-user/workspace/tgt-postgres/src/main/resources/sqlmap\n- **파라미터 파일**: `/home/ec2-user/workspace/oma/bin/test/parameters.properties`\n\n## ⚠️ 문제 상황\n- Oracle과 PostgreSQL 모두 동일하게 0건을 반환\n- 결과는 '동일'하지만 실제 SQL 정확성을 확신할 수 없음\n- 바인드 변수나 테스트 데이터 문제일 가능성\n- SQL 변환 오류가 숨겨져 있을 가능성\n\n## 🔍 0건 결과 SQL 목록 (14개)\n### 📄 OrderMapper (3개)\n**파일 경로:**\n- 소스: `/home/ec2-user/workspace/src-orcl/src/main/resources/sqlmap/mapper/ordermapper/OrderMapper.xml`\n- 타겟: `/home/ec2-user/workspace/tgt-postgres/src/main/resources/sqlmap/mapper/ordermapper/OrderMapper.xml`\n\n**SQL ID 목록:**\n- `selectOrderDetail`\n- `selectOrderItems`\n- `selectOrderShippingInfo`\n\n### 📄 PaymentMapper (2개)\n**파일 경로:**\n- 소스: `/home/ec2-user/workspace/src-orcl/src/main/resources/sqlmap/mapper/paymentmapper/PaymentMapper.xml`\n- 타겟: `/home/ec2-user/workspace/tgt-postgres/src/main/resources/sqlmap/mapper/paymentmapper/PaymentMapper.xml`\n\n**SQL ID 목록:**\n- `selectPaymentDetail`\n- `selectRefundStatistics`\n\n### 📄 ProductMapper (2개)\n**파일 경로:**\n- 소스: `/home/ec2-user/workspace/src-orcl/src/main/resources/sqlmap/mapper/productmapper/ProductMapper.xml`\n- 타겟: `/home/ec2-user/workspace/tgt-postgres/src/main/resources/sqlmap/mapper/productmapper/ProductMapper.xml`\n\n**SQL ID 목록:**\n- `selectProductDetail`\n- `selectProductPriceHistory`\n\n### 📄 ShippingMapper (3개)\n**파일 경로:**\n- 소스: `/home/ec2-user/workspace/src-orcl/src/main/resources/sqlmap/mapper/shippingmapper/ShippingMapper.xml`\n- 타겟: `/home/ec2-user/workspace/tgt-postgres/src/main/resources/sqlmap/mapper/shippingmapper/ShippingMapper.xml`\n\n**SQL ID 목록:**\n- `selectShippingDelayPatternAnalysis`\n- `selectShippingPerformanceAnalysis`\n- `selectShippingRouteOptimizationAnalysis`\n\n### 📄 UserMapper (4개)\n**파일 경로:**\n- 소스: `/home/ec2-user/workspace/src-orcl/src/main/resources/sqlmap/mapper/usermapper/UserMapper.xml`\n- 타겟: `/home/ec2-user/workspace/tgt-postgres/src/main/resources/sqlmap/mapper/usermapper/UserMapper.xml`\n\n**SQL ID 목록:**\n- `selectDormantUserAnalysis`\n- `selectUserActivityStats`\n- `selectUserDetail`\n- `selectUserOrderHistory`\n\n## 📋 상세 분석 요청사항\n### 1. SQL 의도 분석\n각 SQL ID별로 다음을 분석해주세요:\n- SQL의 비즈니스 목적과 예상 결과 건수\n- 일반적으로 데이터가 존재해야 하는 SQL인지 확인\n- WHERE 조건과 JOIN 조건 분석\n\n### 2. 파라미터 분석\n현재 `parameters.properties` 파일의 바인드 변수를 확인하고:\n- 각 SQL에서 사용하는 파라미터 식별\n- 0건이 나올 수 있는 파라미터 값 분석\n- 실제 데이터가 존재하는 파라미터 값 제안\n\n### 3. 테스트 데이터 검증\n- 각 SQL이 참조하는 테이블의 데이터 존재 여부 확인 방법\n- 필요한 테스트 데이터 삽입 SQL 제안\n- 데이터 의존성 관계 분석 (부모-자식 테이블 등)\n\n### 4. SQL 변환 검증\nOracle SQL과 PostgreSQL SQL을 비교하여:\n- 변환 오류가 있는지 확인\n- 0건 결과를 유발할 수 있는 변환 실수 식별\n- 조건문이나 조인 로직의 차이점 분석\n\n### 5. 구체적 검증 방안\n각 SQL별로 다음을 제공해주세요:\n- **수정된 파라미터 값**: 실제 결과가 나올 수 있는 값\n- **테스트 데이터 준비 SQL**: 필요한 경우\n- **검증 쿼리**: 데이터 존재 여부 확인용\n- **우선순위**: 비즈니스 중요도 기준\n\n### 6. 자동화 방안\n- 0건 결과 SQL을 자동으로 재테스트하는 방법\n- 파라미터 값을 동적으로 생성하는 방법\n- 테스트 데이터 자동 생성 스크립트\n\n**💡 중요:** 각 SQL ID별로 구체적인 파라미터 값과 검증 방법을 제시해주세요. \n예시:\n```\n# selectUserList 검증을 위한 파라미터\nuserId=1\nstatus=ACTIVE\nstartDate=2024-01-01\nendDate=2024-12-31\n\n# 데이터 존재 확인 쿼리\nSELECT COUNT(*) FROM users WHERE status = 'ACTIVE';\n```\n