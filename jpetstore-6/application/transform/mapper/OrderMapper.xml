<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mybatis.jpetstore.mapper.OrderMapper">

<!-- 2025-06-20 Amazon Q Developer : Converted Oracle SQL to PostgreSQL compatible SQL -->
<select id="getOrder" resultType="Order">
    SELECT
      ORDERS.BILLADDR1 AS billAddress1,
      ORDERS.BILLADDR2 AS billAddress2,
      ORDERS.BILLCITY,
      ORDERS.BILLCOUNTRY,
      ORDERS.BILLSTATE,
      ORDERS.BILLTOFIRSTNAME,
      ORDERS.BILLTOLASTNAME,
      ORDERS.BILLZIP,
      ORDERS.SHIPADDR1 AS shipAddress1,
      ORDERS.SHIPADDR2 AS shipAddress2,
      ORDERS.SHIPCITY,
      ORDERS.SHIPCOUNTRY,
      ORDERS.SHIPSTATE,
      ORDERS.SHIPTOFIRSTNAME,
      ORDERS.SHIPTOLASTNAME,
      ORDERS.SHIPZIP,
      ORDERS.CARDTYPE,
      ORDERS.COURIER,
      ORDERS.CREDITCARD,
      ORDERS.EXPRDATE AS expiryDate,
      ORDERS.LOCALE,
      ORDERS.ORDERDATE,
      ORDERS.ORDERID,
      ORDERS.TOTALPRICE,
      ORDERS.USERID AS username,
      ORDERSTATUS.STATUS
    FROM ORDERS, ORDERSTATUS
    WHERE ORDERS.ORDERID = #{value}
      AND ORDERS.ORDERID = ORDERSTATUS.ORDERID
  </select>

<!-- 2025-06-20 Amazon Q Developer : Converted Oracle SQL to PostgreSQL compatible SQL -->
<select id="getOrdersByUsername" resultType="Order">
    SELECT
      ORDERS.BILLADDR1 AS billAddress1,
      ORDERS.BILLADDR2 AS billAddress2,
      ORDERS.BILLCITY,
      ORDERS.BILLCOUNTRY,
      ORDERS.BILLSTATE,
      ORDERS.BILLTOFIRSTNAME,
      ORDERS.BILLTOLASTNAME,
      ORDERS.BILLZIP,
      ORDERS.SHIPADDR1 AS shipAddress1,
      ORDERS.SHIPADDR2 AS shipAddress2,
      ORDERS.SHIPCITY,
      ORDERS.SHIPCOUNTRY,
      ORDERS.SHIPSTATE,
      ORDERS.SHIPTOFIRSTNAME,
      ORDERS.SHIPTOLASTNAME,
      ORDERS.SHIPZIP,
      ORDERS.CARDTYPE,
      ORDERS.COURIER,
      ORDERS.CREDITCARD,
      ORDERS.EXPRDATE AS expiryDate,
      ORDERS.LOCALE,
      ORDERS.ORDERDATE,
      ORDERS.ORDERID,
      ORDERS.TOTALPRICE,
      ORDERS.USERID AS username,
      ORDERSTATUS.STATUS
    FROM ORDERS, ORDERSTATUS
    WHERE ORDERS.USERID = #{value}
      AND ORDERS.ORDERID = ORDERSTATUS.ORDERID
    ORDER BY ORDERS.ORDERDATE
  </select>

<!-- 2025-06-20 Amazon Q Developer : Converted Oracle SQL to PostgreSQL compatible SQL -->
<insert id="insertOrder">
    INSERT INTO ORDERS (ORDERID, USERID, ORDERDATE, SHIPADDR1, SHIPADDR2, SHIPCITY, SHIPSTATE,
      SHIPZIP, SHIPCOUNTRY, BILLADDR1, BILLADDR2, BILLCITY, BILLSTATE, BILLZIP, BILLCOUNTRY,
      COURIER, TOTALPRICE, BILLTOFIRSTNAME, BILLTOLASTNAME, SHIPTOFIRSTNAME, SHIPTOLASTNAME,
      CREDITCARD, EXPRDATE, CARDTYPE, LOCALE)
    VALUES(#{orderId}, #{username}, #{orderDate}, #{shipAddress1}, #{shipAddress2,jdbcType=VARCHAR}, #{shipCity},
      #{shipState}, #{shipZip}, #{shipCountry}, #{billAddress1}, #{billAddress2,jdbcType=VARCHAR}, #{billCity},
      #{billState}, #{billZip}, #{billCountry}, #{courier}, #{totalPrice}, #{billToFirstName}, #{billToLastName},
      #{shipToFirstName}, #{shipToLastName}, #{creditCard}, #{expiryDate}, #{cardType}, #{locale})
  </insert>

<!-- 2025-06-20 Amazon Q Developer : Converted Oracle SQL to PostgreSQL compatible SQL -->
<insert id="insertOrderStatus">
    INSERT INTO ORDERSTATUS (ORDERID, LINENUM, TIMESTAMP, STATUS)
    VALUES (#{orderId,jdbcType=NUMERIC}, #{orderId,jdbcType=NUMERIC}, #{orderDate,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR})
  </insert>

</mapper>
