프로그램 이름: asct.py

목적:
DMS SC가 오라클 스키마를 Aurora PostgreSQL로 변환하지 못한 스키마 오브젝트를 Amazon Q를 사용하여 Postgres 호환 구문으로 변환하는 Python 프로그램을 작성

주요 기능:
1. CSV 파일 처리
   - $ASCT_HOME/work 디렉토리에서 ORACLE_AURORA_POSTGRESQL로 시작하는 ZIP 파일 압축 해제
   - work/extracted_csv 디렉토리에서 CSV 파일 검색
   - "Estimated complexity"가 "Medium" 또는 "Complex"인 항목 추출
   - 오브젝트 타입과 이름을 work/incompatible.lst 파일에 저장

2. 오라클 DDL 추출
   - 오브젝트 타입과 이름을 기반으로 오라클에서 DDL 추출
   - 지정된 추출 순서와 DBMS_METADATA 설정 적용
   - $ORACLE_ADM_USER로 실행, $ORACLE_SVC_USER 대상
   - 추출된 DDL을 work/oracle 디렉토리에 저장

3. PostgreSQL 변환
   - Amazon Q를 사용하여 오라클 DDL을 Postgres 호환 구문으로 변환
   - prompt/oracle_to_postgres_prompt.txt 파일의 프롬프트 사용
   - 변환된 구문을 work/transform 디렉토리에 저장

4. 변환 결과 처리
   - 성공적인 변환: PostgreSQL 구문 특성 확인 (세미콜론, 들여쓰기 등)
   - 변환 실패: failed_conversions 디렉토리에 원본 저장, 오류 로그 기록

5. Amazon Q 응답 처리
   - ANSI 색상 코드 및 마크다운 처리
   - 원시 출력을 log 디렉토리에 저장

6. 기본 템플릿 생성
   - 변환 실패 시 기본 PostgreSQL 코드 템플릿 제공

7. PostgreSQL 데이터베이스 배포
   - 환경 변수를 통한 연결 정보 사용
   - psql 명령으로 변환된 SQL 파일 실행
   - 객체 타입 순서에 따른 실행
   - 오류 로깅 및 통계 보고
   - "--deploy-only" 옵션 지원

8. 에러 자동 처리
   - 구문 에러, 객체 존재, 참조 객체 없음, 스키마 없음 등 처리
   - 재시도 로직 및 종속성 큐 구현

9. 배포 후 분석 및 보고
   - 에러 유형별 통계 수집
   - 분석 보고서 생성 및 해결 방안 제안

환경 변수:
- ASCT_HOME: ASCT 작업 디렉토리
- ORACLE_ADM_USER, ORACLE_ADM_PASSWORD, ORACLE_HOST, ORACLE_PORT, ORACLE_SID: 오라클 연결 정보
- PGHOST, PGUSER, PGPORT, PGDATABASE, PGPASSWORD: PostgreSQL 연결 정보

주의사항:
- 모듈화된 코드 구조 사용
- 에러 처리 및 로깅 철저히 구현
- 성능 최적화 고려 (대용량 데이터 처리)
- 보안 고려 (비밀번호 등 민감한 정보 처리)
- 테스트 케이스 작성 및 단위 테스트 수행